cmake_minimum_required(VERSION 3.1make)
project(CPneuMesh)

#Versioning
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CXX_FLAGS_RELEASE "-O3")

#Tests for Clang and AppleClang which is defined in CMake 3.0 and higher
if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  message("Clang.")
#  set(CMAKE_CXX_FLAGS "-std=c++11 -stdlib=libc++ -Wall -g")
  set(CMAKE_CXX_FLAGS "-std=c++17 -stdlib=libc++ -Wall -g")
  set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
  #    set(CMAKE_CXX_FLAGS_DEBUG "-g")
  set(OPENMP OFF CACHE BOOL "OpenMP")
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  message("GCC.")
#  set(CMAKE_CXX_FLAGS "-std=c++11 -Wall -g")
  set(CMAKE_CXX_FLAGS "-std=c++17 -Wall -g")
  set(CMAKE_CXX_FLAGS_RELEASE "-Ofast -DNDEBUG")
  #    set(CMAKE_CXX_FLAGS_DEBUG "-g")
  set(OPENMP ON CACHE BOOL "OpenMP")
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
  message("ICC.")
  if(WIN32)
    set(CMAKE_CXX_FLAGS "/Qstd=c++11")
    set(CMAKE_CXX_FLAGS_RELEASE "/O3 /DNDEBUG")
  else()
    set(CMAKE_CXX_FLAGS "-std=c++11")
    set(CMAKE_CXX_FLAGS_RELEASE "-O3 -DNDEBUG")
  endif()
  set(OPENMP OFF CACHE BOOL "OpenMP")
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
  message("MSVC.")
  set(CMAKE_CXX_FLAGS_DEBUG "/MTd")
  set(CMAKE_CXX_FLAGS_RELEASE "/MT /Ox /Ot /fp:fast /GS- /GL /DNDEBUG")
  set(CMAKE_EXE_LINKER_FLAGS_RELEASE "/LTCG /INCREMENTAL:NO /OPT:REF")
  set(OPENMP ON CACHE BOOL "OpenMP")
else()
  message( FATAL_ERROR "CXX compiler not recognized. CMake will quit." )
endif()


include_directories("./include/eigen-3.4.0/")
#set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} ./include/eigen-3.4.0/)

add_subdirectory(pybind11)
pybind11_add_module(model SHARED Model.cpp)
